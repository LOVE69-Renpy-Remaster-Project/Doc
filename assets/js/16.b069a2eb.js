(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{596:function(t,a,v){"use strict";v.r(a);var _=v(11),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[t._v("本节文档介绍移植的相关内容，还好这部分我比较熟悉，应该不会有什么大问题，如有疏漏，欢迎指正")])]),v("h2",{attrs:{id:"什么是-移植"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-移植"}},[t._v("#")]),t._v(" 什么是“移植”？")]),t._v(" "),v("p",[t._v("本来是没有打算写这部分的，但是根据发布贴的反馈情况，我觉得还是需要写一下的")]),t._v(" "),v("p",[t._v("就我个人的了解，Galgame 汉化中的“移植”，在近5年内，确实是非常稀少，可能因为这个原因，很多人不知道移植是怎么回事儿。我是13年入坑的，那个时候 ONScript（简称“ONS”） 还非常火，我的入坑作是 Tiny Dungeon ，Rosebleu 社的，我当时玩的就是 ONS 移植版，一直想抽时间补一下可惜一直没有顾得上去补。当时 ONS 可谓是百花齐放，有大量的汉化移植作品出现")]),t._v(" "),v("p",[t._v("咳咳，似乎有点扯远了，回到话题。所谓“移植”，就是从头开始，从零开始，自己写一个程序，来实现和原作一样的效果，“汉化移植”，就是在这个过程中顺带做了汉化。")]),t._v(" "),v("h3",{attrs:{id:"对比一下汉化补丁和汉化移植吧"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对比一下汉化补丁和汉化移植吧"}},[t._v("#")]),t._v(" 对比一下汉化补丁和汉化移植吧？")]),t._v(" "),v("p",[t._v("如果说，制作汉化补丁的程序猿是 Galgame 的破解者，那么，制作汉化移植的时候，程序猿更像是 Galgame 的制作者")]),t._v(" "),v("p",[t._v("这两种都很难，但是难点在不同的地方，挑战性都非常大")]),t._v(" "),v("p",[t._v("对于哪个更难这样的问题我不予置评，毕竟我并不了解汇编语言和反编译所以并不好评价")]),t._v(" "),v("h2",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("p",[t._v("如果你想做汉化，但是不想学习枯燥的汇编语言，通过移植方式来做不失为一个好办法")]),t._v(" "),v("p",[t._v("另外，如果原作程序 Bug 比较多的情况（比如本作，非常容易崩溃）或者原作不是跨平台的情况下，选择移植可以避免原作 Bug （因为不是一个程序，当然，自己不能写一堆 Bug 进去），还可以解决跨平台")]),t._v(" "),v("p",[t._v("这种方式的主要难点在于选择")]),t._v(" "),v("h2",{attrs:{id:"步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),v("p",[t._v("步骤和补丁方式的差不太多，但是在解密这块基本上没有要求")]),t._v(" "),v("p",[t._v("大概是这样的：解包->翻译、修图->写脚本->封包->测试->发布")]),t._v(" "),v("p",[t._v("翻译、修图、写脚本的顺序可以随喜好自由安排")]),t._v(" "),v("h3",{attrs:{id:"解包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解包"}},[t._v("#")]),t._v(" 解包")]),t._v(" "),v("p",[t._v("参考上节内容，不过只需要拿到媒体的素材文件就行（图片音视频），脚本拿不到也完全不要紧")]),t._v(" "),v("h3",{attrs:{id:"翻译、修图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#翻译、修图"}},[t._v("#")]),t._v(" 翻译、修图")]),t._v(" "),v("p",[t._v("同样把脚本发给翻译，把图片发给美工，OP做字幕……")]),t._v(" "),v("p",[t._v("不属于本文档要讨论的主要内容，也没什么要特别注意的地方")]),t._v(" "),v("h3",{attrs:{id:"写脚本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写脚本"}},[t._v("#")]),t._v(" 写脚本")]),t._v(" "),v("p",[t._v("移植的重难点，而且，老实说，并不是特别好学")]),t._v(" "),v("p",[t._v("如何做成原作的样子，原作里面的功能又如何实现，需要大量的思考和尝试")]),t._v(" "),v("p",[t._v("这部分将是我们的重点，我们将在"),v("a",{attrs:{href:"https://love69-renpy-remaster-project.github.io/Doc/renpy/",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Ren'Py 实例学习部分"),v("OutboundLink")],1),t._v("详细讲解")]),t._v(" "),v("h3",{attrs:{id:"封包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#封包"}},[t._v("#")]),t._v(" 封包")]),t._v(" "),v("p",[t._v("同样和上节一样，不过会简单很多")]),t._v(" "),v("h3",{attrs:{id:"测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),v("p",[t._v("对于本文档的 Ren'Py ，我们可以轻松使用 CI/CD 工具做自动化测试、发布")]),t._v(" "),v("p",[t._v("当然，全面的测试还是需要人工去做的，文本的校对也是需要人力去做的内容")]),t._v(" "),v("h3",{attrs:{id:"发布"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[t._v("#")]),t._v(" 发布")]),t._v(" "),v("p",[t._v("同样和上节一样")])])}),[],!1,null,null,null);a.default=r.exports}}]);