(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{628:function(e,t,r){"use strict";r.r(t);var o=r(11),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("这两天整理之前做 LV69 的东西的时候看到了之前做音频识别的虚拟机，突然想到还有必要写点这个方面的东西，所以开了这个附录，这个附录和 Ren'Py 完全木有任何关系，不过可能会给这种做移植的你带来些许帮助")]),e._v(" "),r("h2",{attrs:{id:"音频识别-声纹识别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#音频识别-声纹识别"}},[e._v("#")]),e._v(" 音频识别（声纹识别）")]),e._v(" "),r("p",[e._v("按照一般情况下，Galgame 的音声是会按照顺序进行的，类似从 “0000001.ogg” 按照从小到大的顺序到 “0001457.ogg” 这样，但是，如果是存在多周目、补录音声，甚至厂商专门打乱音频顺序的情况，就会导致在移植过程中很难找到某句话对应的音声，如果一句一句去听的话，会非常浪费时间，为了解决这个问题，我们在移植中去 Github 上找了这样的库，最后发现了 "),r("a",{attrs:{href:"https://github.com/charlesconnell/AudioCompare",target:"_blank",rel:"noopener noreferrer"}},[e._v("charlesconnell/AudioCompare"),r("OutboundLink")],1),e._v(" 这个音频比对库，这个库是 Northeastern University 的学生在 2013 年为完成学期作业整的，虽然比较老，但是在免费的里面算是非常好用了")]),e._v(" "),r("h3",{attrs:{id:"安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),r("p",[e._v("虽然这个库是 Python 写的，理论上可以跨平台运行，不过在实际使用的时候发现这货和 Win10 兼容性奇差，见 "),r("a",{attrs:{href:"https://github.com/charlesconnell/AudioCompare/issues/12",target:"_blank",rel:"noopener noreferrer"}},[e._v("Issues #12"),r("OutboundLink")],1),e._v(" ，要正常使用本项目，你需要使用 CentOS7 并编译安装 lame （安装 lame 可以参考 "),r("a",{attrs:{href:"https://github.com/charlesconnell/AudioCompare/issues/6",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6"),r("OutboundLink")],1),e._v(" ），需要的依赖是 numpy 和 lame")]),e._v(" "),r("p",[e._v("如果你搞不定安装的话，我这里提供一个移植中使用的虚拟机，直接导入即可，虚拟机下载链接见下")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://luckypandrive.luckykeeper.site:44443/d/Ali/cp_audio.7z?sign=eb24fb2482f611c2",target:"_blank",rel:"noopener noreferrer"}},[e._v("虚拟机下载链接"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("虚拟机的登录账号密码是 "),r("code",[e._v("root/luckykeeper")]),e._v(" ，网络配置是 "),r("code",[e._v("DHCP")]),e._v(" ，网卡配置文件在 "),r("code",[e._v("/etc/sysconfig/network-scripts/ifcfg-eth0")]),e._v(" ，虚拟机压缩文件大小 1.87G 解压后大小 300G ，请预留充足的硬盘空间")]),e._v(" "),r("h3",{attrs:{id:"使用方法-虚拟机版本的-自己安装请参考并根据需要修改命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用方法-虚拟机版本的-自己安装请参考并根据需要修改命令"}},[e._v("#")]),e._v(" 使用方法（虚拟机版本的，自己安装请参考并根据需要修改命令）")]),e._v(" "),r("ol",[r("li",[e._v("在 "),r("code",[e._v("/root/")]),e._v(" 目录下上传将要比对的音声如 target06.mp3（对原作录屏，并将录屏文件转换为 .mp3 格式）")]),e._v(" "),r("li",[e._v("在 "),r("code",[e._v("/root/cp_all")]),e._v(" 目录上传 "),r("strong",[e._v("mp3 格式")]),e._v("的全音声比对库（比如要比对心爱酱的音声，就把心爱酱的所有音声传上来）")]),e._v(" "),r("li",[e._v("进行比对，参考命令：nohup python /home/AudioCompare/main.py -f /root/target06.mp3 -d /root/cp_all/")]),e._v(" "),r("li",[e._v("获取比对完成的结果 "),r("code",[e._v("nohup.out")])]),e._v(" "),r("li",[e._v("使用 MS Word 去重，用 MS Excel 排序")])]),e._v(" "),r("p",[e._v("Tips:")]),e._v(" "),r("ul",[r("li",[e._v("必须使用 mp3 格式的音频，如果不是，用格式工厂之类的软件转换")]),e._v(" "),r("li",[e._v("文件目录可以更换，比如不放在 /root 而是放在 /opt ，但是要跟着改变命令")]),e._v(" "),r("li",[e._v("上传下载文件可以用 FlashFXP 等软件，sftp 连接")]),e._v(" "),r("li",[e._v("命令除了直接在 NOVNC 操作外，可以用 putty 等软件连接 ssh 操作")])])])}),[],!1,null,null,null);t.default=a.exports}}]);